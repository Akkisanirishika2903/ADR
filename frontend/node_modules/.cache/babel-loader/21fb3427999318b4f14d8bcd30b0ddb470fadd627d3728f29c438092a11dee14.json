{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91915\\\\OneDrive\\\\Desktop\\\\adr-detection-project\\\\frontend\\\\src\\\\components\\\\ADRDetection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ADRContainer = styled.div`\n  padding: 30px;\n  font-family: 'Poppins', sans-serif;\n  background-color: #f8f8f8;\n  min-height: 100vh;\n`;\n_c = ADRContainer;\nconst Title = styled.h1`\n  font-size: 2.5rem;\n  color: #333;\n  text-align: center;\n  margin-bottom: 40px;\n`;\n_c2 = Title;\nconst ADRItem = styled.div`\n  background-color: #fff;\n  padding: 20px;\n  margin-bottom: 20px;\n  border-radius: 10px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n`;\n_c3 = ADRItem;\nconst ADRTitle = styled.h3`\n  font-size: 1.8rem;\n  color: #2a2a2a;\n`;\n_c4 = ADRTitle;\nconst ADRText = styled.p`\n  font-size: 1.2rem;\n  color: #555;\n  line-height: 1.6;\n`;\n_c5 = ADRText;\nconst CommentList = styled.ul`\n  margin-top: 10px;\n  list-style-type: none;\n  padding-left: 20px;\n`;\n_c6 = CommentList;\nconst CommentItem = styled.li`\n  font-size: 1.1rem;\n  color: #444;\n  padding: 5px 0;\n`;\n_c7 = CommentItem;\nconst LoadingMessage = styled.p`\n  font-size: 1.5rem;\n  color: #ff6b6b;\n  text-align: center;\n`;\n_c8 = LoadingMessage;\nconst ADRDetection = ({\n  drugName\n}) => {\n  _s();\n  const [adrResults, setResults] = useState([]);\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const fetchADRData = async () => {\n      if (!drugName.trim()) {\n        setMessage('Please provide a valid drug name.');\n        return;\n      }\n      setLoading(true);\n      try {\n        const response = await fetch(`/get-adr-results?drug_name=${encodeURIComponent(drugName)}`);\n        const data = await response.json();\n        if (!data.adr_results || data.adr_results.length === 0) {\n          setMessage('No ADRs detected for this drug.');\n          setResults([]);\n        } else {\n          const hasADR = data.adr_results.some(post => post.comments.length > 0);\n          if (hasADR) {\n            setResults(data.adr_results);\n            setMessage(\"\"); // Clear previous message\n          } else {\n            setMessage(\"No ADRs detected for this drug.\");\n            setResults([]);\n          }\n        }\n      } catch (error) {\n        setMessage(\"Failed to fetch ADR data. Please try again.\");\n        console.error(error);\n      }\n      setLoading(false);\n    };\n    fetchADRData();\n  }, [drugName]);\n  return /*#__PURE__*/_jsxDEV(ADRContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: [\"ADR Detection Results for \", drugName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(LoadingMessage, {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 19\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }, this), adrResults.length > 0 && adrResults.map((post, index) => /*#__PURE__*/_jsxDEV(ADRItem, {\n      children: [/*#__PURE__*/_jsxDEV(ADRTitle, {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ADRText, {\n        children: post.selftext\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CommentList, {\n        children: post.comments.map((comment, commentIndex) => /*#__PURE__*/_jsxDEV(CommentItem, {\n          children: comment\n        }, commentIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(ADRDetection, \"iDuBsylK0CjWR+pYF3zVxsVm5LQ=\");\n_c9 = ADRDetection;\nexport default ADRDetection;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"ADRContainer\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"ADRItem\");\n$RefreshReg$(_c4, \"ADRTitle\");\n$RefreshReg$(_c5, \"ADRText\");\n$RefreshReg$(_c6, \"CommentList\");\n$RefreshReg$(_c7, \"CommentItem\");\n$RefreshReg$(_c8, \"LoadingMessage\");\n$RefreshReg$(_c9, \"ADRDetection\");","map":{"version":3,"names":["React","useState","useEffect","styled","jsxDEV","_jsxDEV","ADRContainer","div","_c","Title","h1","_c2","ADRItem","_c3","ADRTitle","h3","_c4","ADRText","p","_c5","CommentList","ul","_c6","CommentItem","li","_c7","LoadingMessage","_c8","ADRDetection","drugName","_s","adrResults","setResults","message","setMessage","loading","setLoading","fetchADRData","trim","response","fetch","encodeURIComponent","data","json","adr_results","length","hasADR","some","post","comments","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","title","selftext","comment","commentIndex","_c9","$RefreshReg$"],"sources":["C:/Users/91915/OneDrive/Desktop/adr-detection-project/frontend/src/components/ADRDetection.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ADRContainer = styled.div`\r\n  padding: 30px;\r\n  font-family: 'Poppins', sans-serif;\r\n  background-color: #f8f8f8;\r\n  min-height: 100vh;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 2.5rem;\r\n  color: #333;\r\n  text-align: center;\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nconst ADRItem = styled.div`\r\n  background-color: #fff;\r\n  padding: 20px;\r\n  margin-bottom: 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst ADRTitle = styled.h3`\r\n  font-size: 1.8rem;\r\n  color: #2a2a2a;\r\n`;\r\n\r\nconst ADRText = styled.p`\r\n  font-size: 1.2rem;\r\n  color: #555;\r\n  line-height: 1.6;\r\n`;\r\n\r\nconst CommentList = styled.ul`\r\n  margin-top: 10px;\r\n  list-style-type: none;\r\n  padding-left: 20px;\r\n`;\r\n\r\nconst CommentItem = styled.li`\r\n  font-size: 1.1rem;\r\n  color: #444;\r\n  padding: 5px 0;\r\n`;\r\n\r\nconst LoadingMessage = styled.p`\r\n  font-size: 1.5rem;\r\n  color: #ff6b6b;\r\n  text-align: center;\r\n`;\r\n\r\nconst ADRDetection = ({ drugName }) => {\r\n  const [adrResults, setResults] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchADRData = async () => {\r\n      if (!drugName.trim()) {\r\n        setMessage('Please provide a valid drug name.');\r\n        return;\r\n      }\r\n    \r\n      setLoading(true);\r\n      try {\r\n        const response = await fetch(`/get-adr-results?drug_name=${encodeURIComponent(drugName)}`);\r\n        const data = await response.json();\r\n    \r\n        if (!data.adr_results || data.adr_results.length === 0) {\r\n          setMessage('No ADRs detected for this drug.');\r\n          setResults([]);\r\n        } else {\r\n          const hasADR = data.adr_results.some(post => post.comments.length > 0);\r\n          if (hasADR) {\r\n            setResults(data.adr_results);\r\n            setMessage(\"\"); // Clear previous message\r\n          } else {\r\n            setMessage(\"No ADRs detected for this drug.\");\r\n            setResults([]);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        setMessage(\"Failed to fetch ADR data. Please try again.\");\r\n        console.error(error);\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchADRData();\r\n  }, [drugName]);\r\n\r\n  return (\r\n    <ADRContainer>\r\n      <Title>ADR Detection Results for {drugName}</Title>\r\n      {loading && <LoadingMessage>Loading...</LoadingMessage>}\r\n      {message && <p>{message}</p>}\r\n      {adrResults.length > 0 &&\r\n        adrResults.map((post, index) => (\r\n          <ADRItem key={index}>\r\n            <ADRTitle>{post.title}</ADRTitle>\r\n            <ADRText>{post.selftext}</ADRText>\r\n            <CommentList>\r\n              {post.comments.map((comment, commentIndex) => (\r\n                <CommentItem key={commentIndex}>{comment}</CommentItem>\r\n              ))}\r\n            </CommentList>\r\n          </ADRItem>\r\n        ))\r\n      }\r\n    </ADRContainer>\r\n  );\r\n};\r\n\r\nexport default ADRDetection;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}