{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91915\\\\OneDrive\\\\Desktop\\\\adr-detection-project\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ADRDetection = () => {\n  _s();\n  const [adrResults, setAdrResults] = useState(null);\n  const [drugName, setDrugName] = useState('');\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    if (drugName) {\n      setLoading(true); // Start loading\n      fetch(`/get-adr-results?drug_name=${drugName}`).then(response => response.json()).then(data => {\n        setAdrResults(data.adr_results);\n        setLoading(false); // Stop loading once data is received\n      }).catch(error => {\n        console.error('Error fetching ADR data:', error);\n        setLoading(false); // Stop loading on error\n      });\n    }\n  }, [drugName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"ADR Detection for \", drugName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter drug name\",\n      value: drugName,\n      onChange: e => setDrugName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 19\n    }, this), \" \", adrResults && adrResults.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"ADR Detection Results:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: adrResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: result\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : adrResults && adrResults.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No ADRs detected for this drug.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(ADRDetection, \"cgw30DCduuPwmHK3mQY0gWmDd78=\");\n_c = ADRDetection;\nexport default ADRDetection;\nvar _c;\n$RefreshReg$(_c, \"ADRDetection\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ADRDetection","_s","adrResults","setAdrResults","drugName","setDrugName","loading","setLoading","fetch","then","response","json","data","adr_results","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","length","map","result","index","_c","$RefreshReg$"],"sources":["C:/Users/91915/OneDrive/Desktop/adr-detection-project/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst ADRDetection = () => {\r\n  const [adrResults, setAdrResults] = useState(null);\r\n  const [drugName, setDrugName] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (drugName) {\r\n      setLoading(true); // Start loading\r\n      fetch(`/get-adr-results?drug_name=${drugName}`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          setAdrResults(data.adr_results);\r\n          setLoading(false); // Stop loading once data is received\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching ADR data:', error);\r\n          setLoading(false); // Stop loading on error\r\n        });\r\n    }\r\n  }, [drugName]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>ADR Detection for {drugName}</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter drug name\"\r\n        value={drugName}\r\n        onChange={(e) => setDrugName(e.target.value)}\r\n      />\r\n      \r\n      {loading && <p>Loading...</p>} {/* Loading indicator */}\r\n      \r\n      {adrResults && adrResults.length > 0 ? (\r\n        <div>\r\n          <h2>ADR Detection Results:</h2>\r\n          <ul>\r\n            {adrResults.map((result, index) => (\r\n              <li key={index}>{result}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      ) : adrResults && adrResults.length === 0 ? (\r\n        <p>No ADRs detected for this drug.</p>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ADRDetection;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}