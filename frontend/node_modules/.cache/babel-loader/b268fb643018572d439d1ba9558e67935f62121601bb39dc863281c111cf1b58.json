{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91915\\\\OneDrive\\\\Desktop\\\\adr-detection-project\\\\frontend\\\\src\\\\components\\\\ADRDetection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ADRDetection = ({\n  drugName\n}) => {\n  _s();\n  const [adrResults, setResults] = useState([]);\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const fetchADRData = async () => {\n      if (!drugName.trim()) {\n        setMessage(\"Please provide a valid drug name.\");\n        return;\n      }\n      setLoading(true);\n      try {\n        const response = await fetch(`/get-adr-results?drug_name=${encodeURIComponent(drugName)}`);\n        const data = await response.json();\n        if (!data.adr_results || data.adr_results.length === 0) {\n          setMessage(\"No ADRs detected for this drug.\");\n          setResults([]);\n        } else {\n          const hasADR = data.adr_results.some(post => post.comments.length > 0);\n          if (hasADR) {\n            setResults(data.adr_results);\n            setMessage(\"\"); // Clear previous message\n          } else {\n            setMessage(\"No ADRs detected for this drug.\");\n            setResults([]);\n          }\n        }\n      } catch (error) {\n        setMessage(\"Failed to fetch ADR data. Please try again.\");\n        console.error(error);\n      }\n      setLoading(false);\n    };\n    fetchADRData();\n  }, [drugName]); // Re-fetch if the drug name changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 19\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 19\n    }, this), adrResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: adrResults.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.selftext\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: post.comments.map((comment, commentIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: comment\n          }, commentIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(ADRDetection, \"iDuBsylK0CjWR+pYF3zVxsVm5LQ=\");\n_c = ADRDetection;\nexport default ADRDetection;\nvar _c;\n$RefreshReg$(_c, \"ADRDetection\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ADRDetection","drugName","_s","adrResults","setResults","message","setMessage","loading","setLoading","fetchADRData","trim","response","fetch","encodeURIComponent","data","json","adr_results","length","hasADR","some","post","comments","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","style","marginBottom","title","selftext","comment","commentIndex","_c","$RefreshReg$"],"sources":["C:/Users/91915/OneDrive/Desktop/adr-detection-project/frontend/src/components/ADRDetection.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst ADRDetection = ({ drugName }) => {\r\n  const [adrResults, setResults] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchADRData = async () => {\r\n      if (!drugName.trim()) {\r\n        setMessage(\"Please provide a valid drug name.\");\r\n        return;\r\n      }\r\n    \r\n      setLoading(true);\r\n      try {\r\n        const response = await fetch(`/get-adr-results?drug_name=${encodeURIComponent(drugName)}`);\r\n        const data = await response.json();\r\n    \r\n        if (!data.adr_results || data.adr_results.length === 0) {\r\n          setMessage(\"No ADRs detected for this drug.\");\r\n          setResults([]);\r\n        } else {\r\n          const hasADR = data.adr_results.some(post => post.comments.length > 0);\r\n          if (hasADR) {\r\n            setResults(data.adr_results);\r\n            setMessage(\"\"); // Clear previous message\r\n          } else {\r\n            setMessage(\"No ADRs detected for this drug.\");\r\n            setResults([]);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        setMessage(\"Failed to fetch ADR data. Please try again.\");\r\n        console.error(error);\r\n      }\r\n      setLoading(false);\r\n    };\r\n    \r\n\r\n    fetchADRData();\r\n  }, [drugName]); // Re-fetch if the drug name changes\r\n\r\n  return (\r\n    <div>\r\n      {loading && <p>Loading...</p>}\r\n      {message && <p>{message}</p>}\r\n      {adrResults.length > 0 && (\r\n        <div>\r\n          {adrResults.map((post, index) => (\r\n            <div key={index} style={{ marginBottom: '20px' }}>\r\n              <h3>{post.title}</h3>\r\n              <p>{post.selftext}</p>\r\n              <ul>\r\n                {post.comments.map((comment, commentIndex) => (\r\n                  <li key={commentIndex}>{comment}</li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ADRDetection;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}