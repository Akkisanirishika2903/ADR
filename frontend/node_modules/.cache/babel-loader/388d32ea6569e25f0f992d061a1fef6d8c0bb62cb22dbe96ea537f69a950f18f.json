{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91915\\\\OneDrive\\\\Desktop\\\\adr-detection-project\\\\frontend\\\\src\\\\components\\\\ADRDetection.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  max-width: 800px;\n  margin: auto;\n  text-align: center;\n  padding: 20px;\n`;\n_c = Container;\nconst Input = styled.input`\n  width: 60%;\n  padding: 10px;\n  margin-right: 10px;\n  font-size: 16px;\n`;\n_c2 = Input;\nconst Button = styled.button`\n  padding: 10px 15px;\n  font-size: 16px;\n  background: #007bff;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover {\n    background: #0056b3;\n  }\n`;\n_c3 = Button;\nconst PostContainer = styled.div`\n  margin-top: 20px;\n  padding: 15px;\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  background: #f8f8f8;\n  text-align: left;\n`;\n_c4 = PostContainer;\nconst ADRDetection = () => {\n  _s();\n  const [drugName, setDrugName] = useState('');\n  const [adrResults, setAdrResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchADRData = async () => {\n    if (!drugName.trim()) return;\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(`/get-adr-results?drug_name=${drugName}`);\n      const data = await response.json();\n      if (data.error) {\n        setError(data.error);\n        setAdrResults([]);\n      } else {\n        setAdrResults(data.adr_results || []);\n      }\n    } catch (err) {\n      setError('Failed to fetch ADR data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ADR Detection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      placeholder: \"Enter drug name\",\n      value: drugName,\n      onChange: e => setDrugName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: fetchADRData,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this), adrResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Results for \", drugName, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), adrResults.map((result, index) => /*#__PURE__*/_jsxDEV(PostContainer, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: result.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: result.selftext\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Top Comments:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: result.comments.length > 0 ? result.comments.map((comment, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: comment\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 55\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No useful comments found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(ADRDetection, \"+LJ4OfNXhr+3JpaZPpTpakWUltk=\");\n_c5 = ADRDetection;\nexport default ADRDetection;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Input\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"PostContainer\");\n$RefreshReg$(_c5, \"ADRDetection\");","map":{"version":3,"names":["React","useState","styled","jsxDEV","_jsxDEV","Container","div","_c","Input","input","_c2","Button","button","_c3","PostContainer","_c4","ADRDetection","_s","drugName","setDrugName","adrResults","setAdrResults","loading","setLoading","error","setError","fetchADRData","trim","response","fetch","data","json","adr_results","err","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","style","color","length","map","result","index","title","selftext","comments","comment","i","_c5","$RefreshReg$"],"sources":["C:/Users/91915/OneDrive/Desktop/adr-detection-project/frontend/src/components/ADRDetection.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  max-width: 800px;\r\n  margin: auto;\r\n  text-align: center;\r\n  padding: 20px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 60%;\r\n  padding: 10px;\r\n  margin-right: 10px;\r\n  font-size: 16px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 10px 15px;\r\n  font-size: 16px;\r\n  background: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background: #0056b3;\r\n  }\r\n`;\r\n\r\nconst PostContainer = styled.div`\r\n  margin-top: 20px;\r\n  padding: 15px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  background: #f8f8f8;\r\n  text-align: left;\r\n`;\r\n\r\nconst ADRDetection = () => {\r\n  const [drugName, setDrugName] = useState('');\r\n  const [adrResults, setAdrResults] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchADRData = async () => {\r\n    if (!drugName.trim()) return;\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await fetch(`/get-adr-results?drug_name=${drugName}`);\r\n      const data = await response.json();\r\n\r\n      if (data.error) {\r\n        setError(data.error);\r\n        setAdrResults([]);\r\n      } else {\r\n        setAdrResults(data.adr_results || []);\r\n      }\r\n    } catch (err) {\r\n      setError('Failed to fetch ADR data. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h1>ADR Detection</h1>\r\n      <Input\r\n        type=\"text\"\r\n        placeholder=\"Enter drug name\"\r\n        value={drugName}\r\n        onChange={(e) => setDrugName(e.target.value)}\r\n      />\r\n      <Button onClick={fetchADRData}>Search</Button>\r\n\r\n      {loading && <p>Loading...</p>}\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n      {adrResults.length > 0 && (\r\n        <div>\r\n          <h2>Results for {drugName}:</h2>\r\n          {adrResults.map((result, index) => (\r\n            <PostContainer key={index}>\r\n              <h3>{result.title}</h3>\r\n              <p>{result.selftext}</p>\r\n              <h4>Top Comments:</h4>\r\n              <ul>\r\n                {result.comments.length > 0 ? (\r\n                  result.comments.map((comment, i) => <li key={i}>{comment}</li>)\r\n                ) : (\r\n                  <p>No useful comments found.</p>\r\n                )}\r\n              </ul>\r\n            </PostContainer>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ADRDetection;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}