{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91915\\\\OneDrive\\\\Desktop\\\\adr-detection-project\\\\frontend\\\\src\\\\components\\\\ADRDetection.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ADRDetection = () => {\n  _s();\n  const [drugName, setDrugName] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const fetchAdrResults = async () => {\n    if (!drugName.trim()) {\n      setMessage(\"Please enter a drug name.\");\n      setResults([]);\n      return;\n    }\n    setMessage(\"Fetching ADR data...\");\n    try {\n      const response = await fetch(`/get-adr-results?drug_name=${encodeURIComponent(drugName)}`);\n      const data = await response.json();\n      if (!data.adr_results || data.adr_results.length === 0) {\n        setMessage(\"No ADRs detected for this drug.\");\n        setResults([]);\n      } else {\n        const hasADR = data.adr_results.some(post => post.comments.length > 0); // Ensure at least 1 meaningful comment\n        if (hasADR) {\n          setResults(data.adr_results);\n          setMessage(\"\");\n        } else {\n          setMessage(\"No ADRs detected for this drug.\");\n          setResults([]);\n        }\n      }\n    } catch (error) {\n      setMessage(\"Failed to fetch ADR data. Please try again.\");\n      setResults([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"20px\",\n      maxWidth: \"600px\",\n      margin: \"auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"ADR Detection from Reddit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter drug name...\",\n      value: drugName,\n      onChange: e => setDrugName(e.target.value),\n      style: {\n        padding: \"10px\",\n        width: \"80%\",\n        marginBottom: \"10px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchAdrResults,\n      style: {\n        padding: \"10px\",\n        marginLeft: \"10px\"\n      },\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\",\n        marginTop: \"10px\"\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }, this), results.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"ADR Results for \\\"\", drugName, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), results.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: \"1px solid #ccc\",\n          padding: \"10px\",\n          margin: \"10px 0\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.selftext || \"No description available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Relevant Comments:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: post.comments.map((comment, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              textAlign: \"left\"\n            },\n            children: comment\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(ADRDetection, \"UvQ8/lhMHBgqcbOHCKP+0nrKfYE=\");\n_c = ADRDetection;\nexport default ADRDetection;\nvar _c;\n$RefreshReg$(_c, \"ADRDetection\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ADRDetection","_s","drugName","setDrugName","results","setResults","message","setMessage","fetchAdrResults","trim","response","fetch","encodeURIComponent","data","json","adr_results","length","hasADR","some","post","comments","error","style","textAlign","padding","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","width","marginBottom","onClick","marginLeft","color","marginTop","map","index","border","title","selftext","comment","idx","_c","$RefreshReg$"],"sources":["C:/Users/91915/OneDrive/Desktop/adr-detection-project/frontend/src/components/ADRDetection.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst ADRDetection = () => {\r\n  const [drugName, setDrugName] = useState(\"\");\r\n  const [results, setResults] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const fetchAdrResults = async () => {\r\n    if (!drugName.trim()) {\r\n      setMessage(\"Please enter a drug name.\");\r\n      setResults([]);\r\n      return;\r\n    }\r\n\r\n    setMessage(\"Fetching ADR data...\");\r\n\r\n    try {\r\n      const response = await fetch(`/get-adr-results?drug_name=${encodeURIComponent(drugName)}`);\r\n      const data = await response.json();\r\n\r\n      if (!data.adr_results || data.adr_results.length === 0) {\r\n        setMessage(\"No ADRs detected for this drug.\");\r\n        setResults([]);\r\n      } else {\r\n        const hasADR = data.adr_results.some(post => post.comments.length > 0); // Ensure at least 1 meaningful comment\r\n        if (hasADR) {\r\n          setResults(data.adr_results);\r\n          setMessage(\"\");\r\n        } else {\r\n          setMessage(\"No ADRs detected for this drug.\");\r\n          setResults([]);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setMessage(\"Failed to fetch ADR data. Please try again.\");\r\n      setResults([]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\", padding: \"20px\", maxWidth: \"600px\", margin: \"auto\" }}>\r\n      <h2>ADR Detection from Reddit</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter drug name...\"\r\n        value={drugName}\r\n        onChange={(e) => setDrugName(e.target.value)}\r\n        style={{ padding: \"10px\", width: \"80%\", marginBottom: \"10px\" }}\r\n      />\r\n      <button onClick={fetchAdrResults} style={{ padding: \"10px\", marginLeft: \"10px\" }}>\r\n        Search\r\n      </button>\r\n\r\n      {message && <p style={{ color: \"red\", marginTop: \"10px\" }}>{message}</p>}\r\n\r\n      {results.length > 0 && (\r\n        <div>\r\n          <h3>ADR Results for \"{drugName}\"</h3>\r\n          {results.map((post, index) => (\r\n            <div key={index} style={{ border: \"1px solid #ccc\", padding: \"10px\", margin: \"10px 0\" }}>\r\n              <h4>{post.title}</h4>\r\n              <p>{post.selftext || \"No description available\"}</p>\r\n              <h5>Relevant Comments:</h5>\r\n              <ul>\r\n                {post.comments.map((comment, idx) => (\r\n                  <li key={idx} style={{ textAlign: \"left\" }}>{comment}</li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ADRDetection;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}